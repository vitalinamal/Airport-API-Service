services:
  flight:
    build:
      context: .
    env_file:
      - .env
    ports:
      - "8001:8000"
    volumes:
      - ./:/app
      - my_media:/files/media
    command: >
      sh -c "python manage.py wait_for_db &&
            python manage.py migrate &&
            python manage.py runserver 0.0.0.0:8000"
    depends_on:
      - db
      - redis

  db:
    image: postgres:16.0-alpine3.17
    restart: always
    env_file:
      - .env
    ports:
      - "5432:5432"
    volumes:
      - my_db:$PGDATA
  redis:
    image: "redis:alpine"
    restart: always
    container_name: redis_scrapy
    command: redis-server --requirepass ${REDIS_PASSWORD}
    env_file:
      - .env
    ports:
      - "6379:6379"

  redis-admin:
    image: rediscommander/redis-commander:latest
    container_name: redis_admin_scrapy
    ports:
      - "8081:8081"
    restart: always
    env_file:
      - .env
    depends_on:
      - redis



volumes:
  my_db:
  my_media:
